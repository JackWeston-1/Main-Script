local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

WindUI:AddTheme({
    Name = "BlueWhite",
    Accent = "#3b82f6",
    Outline = "#FFFFFF",
    Text = "#FFFFFF",
    Placeholder = "#999999",
    Background = "#1e3a8a",
    Button = "#2986cc",
    Icon = "#FFFFFF"
})


local Window = WindUI:CreateWindow({
    Title = "Grow a Garden [Custom Version]",
    Icon = "leaf",
    Author = "Made by Minh",
    Folder = "hello",
    Size = UDim2.fromOffset(490, 320),
    Transparent = true,
    Outline = true,
    Theme = "BlueWhite",
    SideBarWidth = 190,
    Background = "rbxassetid://73209523764649", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = false,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

WindUI:SetTheme("BlueWhite")


Window:EditOpenButton({
    Title = "GaG",
    Icon = "leaf",
    CornerRadius = UDim.new(0,10),
    StrokeThickness = 1.75,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("6FA8DC"), 
        Color3.fromHex("CFE2F3")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

--Tabs
local MainTab = Window:Tab({
    Title = "Main",
    Icon = "house",
    Desc = "Main Section",
    Locked = false,
})

local ShopTab = Window:Tab({
    Title = "Shop",
    Icon = "shopping-cart",
    Locked = false,
})

local EventTab = Window:Tab({
    Title = "Event",
    Icon = "star",
    Locked = false,
})

local MiscTab = Window:Tab({
    Title = "Misc",
    Icon = "box",
    Locked = false,
})

Window:SelectTab(4) -- Number of Tab


---------------------------------------------------------------------------Main

local Section = MainTab:Section({ 
    Title = "Main",
    TextXAlignment = "Center",
    TextSize = 17, -- Default Size
})

--Auto Collect

local Remotes = require(game:GetService("ReplicatedStorage").Modules.Remotes)
local CollectRemote = Remotes.Crops.Collect

local autoCollectRunning = false
local autoCollectThread = nil

-- Hàm thu hoạch cây
local function getHarvestableCrops()
    local result = {}
    local tagged = game:GetService("CollectionService"):GetTagged("CollectPrompt")
    for _, prompt in pairs(tagged) do
        local important = prompt:FindFirstAncestor("Important")
        if important and important:FindFirstChild("Data") and important.Data:FindFirstChild("Owner") then
            if important.Data.Owner.Value == game.Players.LocalPlayer.Name then
                table.insert(result, prompt.Parent.Parent)
            end
        end
    end
    return result
end

-- Toggle thu hoach
local Toggle = MainTab:Toggle({
    Title = "Thu Hoạch Tất Cả",
    Desc = "Tự động thu hoạch cây trồng của bạn",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        autoCollectRunning = state
        print("Auto Collect: " .. tostring(state))

        if state then
            autoCollectThread = task.spawn(function()
                while autoCollectRunning do
                    local crops = getHarvestableCrops()
                    for _, crop in ipairs(crops) do
                        pcall(function()
                            CollectRemote.send({crop})
                        end)
                        wait(0.1) -- tránh lag, có thể giảm nếu máy khỏe
                    end
                    wait(0.5)
                end
            end)
        else
            if autoCollectThread then
                task.cancel(autoCollectThread)
                autoCollectThread = nil
            end
        end
    end
})


local running = false

local Toggle = MainTab:Toggle({
    Title = "Auto Sell Inventory",
    Desc = "Tự động bán tất cả đồ trong inventory mỗi 10s",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        running = state
        print("Auto Bán: " .. tostring(state))

        if state then
            task.spawn(function()
                while running do
                    -- Dịch chuyển nhân vật
                    local char = game.Players.LocalPlayer.Character
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        char.HumanoidRootPart.CFrame = CFrame.new(86.58, 3.00, 0.43)
                    end
		    wait(0.5)
                    -- Gửi lệnh bán
                    game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Inventory"):FireServer()

                    task.wait(10)
                end
            end)
        end
    end
})



local Button = MainTab:Button({
    Title = "Sell Hold Item",
    Desc = "Bán vật phẩm đang cầm trên tay",
    Locked = false,
    Callback = function()
	local char = game.Players.LocalPlayer.Character
                    if char and char:FindFirstChild("HumanoidRootPart") then
                        char.HumanoidRootPart.CFrame = CFrame.new(86.58, 3.00, 0.43)
                    end
        game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("Sell_Item"):FireServer()
    end
})


--------------------------------------------------------------------------------------Tabs Shop

local Section = ShopTab:Section({ 
    Title = "Shop",
    TextXAlignment = "Center",
    TextSize = 17, -- Default Size
})


-- Danh sách hạt giống & gear
local seedList = {
    "Carrot", "Strawberry", "Blueberry", "Cauliflower", "Watermelon", "Green Apple", "Avocado",
    "Banana", "Pineapple", "Kiwi", "Bell Pepper", "Prickly Pear", "Loquat",
    "Feijoa", "Sugar Apple"
}

local gearList = {
    "Watering Can", "Trowel", "Recall Wrench", "Basic Sprinkler",
    "Advanced Sprinkler", "Godly Sprinkler", "Tanning Mirror",
    "Master Sprinkler", "Favorite Tool", "Cleaning Spray", "Havest Tool", "Friendship Pot"
}

-- Biến toàn cục
getgenv().SelectedSeeds = {}
getgenv().SelectedGears = {}
getgenv().AutoBuyAllItems = false

-- Dropdown chọn SEED
local SeedDropdown = ShopTab:Dropdown({
    Title = "Chọn hạt giống muốn mua",
    Values = seedList,
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        getgenv().SelectedSeeds = option or {}
    end
})

-- Dropdown chọn GEAR
local GearDropdown = ShopTab:Dropdown({
    Title = "Chọn gear muốn mua",
    Values = gearList,
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        getgenv().SelectedGears = option or {}
    end
})

-- Toggle để mua tất cả đã chọn
local BuyAllToggle = ShopTab:Toggle({
    Title = "Auto Buy Selected Seeds & Gears",
    Desc = "Mua tất cả hạt giống và gear đã chọn",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().AutoBuyAllItems = state
        print("Auto Buy Toggle: " .. tostring(state))

        task.spawn(function()
            while getgenv().AutoBuyAllItems do
                -- Mua Seeds
                for _, seed in ipairs(getgenv().SelectedSeeds) do
                    pcall(function()
                        game:GetService("ReplicatedStorage").GameEvents.BuySeedStock:FireServer(seed)
                    end)
                end
                -- Mua Gears
                for _, gear in ipairs(getgenv().SelectedGears) do
                    pcall(function()
                        game:GetService("ReplicatedStorage").GameEvents.BuyGearStock:FireServer(gear)
                    end)
                end
                task.wait(0.5)
            end
        end)
    end
})


local Section = ShopTab:Section({ 
    Title = "",
    TextXAlignment = "Left",
    TextSize = 17, -- Default Size
})

local Toggle = ShopTab:Toggle({ 
    Title = "Auto Buy Egg", 
    Desc = "Tự động mua tất cả trứng trong shop", 
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().AutoBuyEgg = state

        task.spawn(function()
            while getgenv().AutoBuyEgg do
                -- Mua Egg 1
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyPetEgg"):FireServer(1)
                -- Mua Egg 2
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyPetEgg"):FireServer(2)
                -- Mua Egg 3
                game:GetService("ReplicatedStorage"):WaitForChild("GameEvents"):WaitForChild("BuyPetEgg"):FireServer(3)

                task.wait(5) -- Đợi 5 giây trước khi mua tiếp
            end
        end)
    end
})




-------------------------------------------------------------------------------event tabs

local Section = EventTab:Section({ 
    Title = "Event",
    TextXAlignment = "Center",
    TextSize = 17, -- Default Size
})



local lp = game.Players.LocalPlayer
local backpack = lp:WaitForChild("Backpack")
local running = false
local autoEquipConnection = nil
local characterAddedConnection = nil

-- Tên chứa "Pollinated" (phân biệt chữ hoa/thường)
local function findPollinatedTool()
	for _, tool in ipairs(backpack:GetChildren()) do
		if tool:IsA("Tool") and string.find(tool.Name, "Pollinated") then
			return tool
		end
	end
	return nil
end

-- Hàm trang bị tool có tên chứa "Pollinated"
local function equipPollinatedTool()
	local tool = findPollinatedTool()
	if tool and lp.Character and lp.Character:FindFirstChild("Humanoid") then
		lp.Character.Humanoid:EquipTool(tool)
	end
end

-- Gắn vào toggle
local Toggle = EventTab:Toggle({ 
	Title = "Auto Equip Pollinated Fruit",
	Desc = "Tự động cầm trái có Pollinated",
	Icon = "bird",
	Type = "Checkbox",
	Default = false,
	Callback = function(state) 
		running = state
		print("Toggle Activated: " .. tostring(state))

		if state then
			-- Bắt đầu lặp kiểm tra
			autoEquipConnection = task.spawn(function()
				while running do
					task.wait(1)
					local currentTool = lp.Character and lp.Character:FindFirstChildOfClass("Tool")
					if not currentTool or not string.find(currentTool.Name, "Pollinated") then
						equipPollinatedTool()
					end
				end
			end)

			-- Khi nhân vật hồi sinh
			characterAddedConnection = lp.CharacterAdded:Connect(function()
				repeat task.wait() until lp:FindFirstChild("Backpack")
				task.wait(1)
				equipPollinatedTool()
			end)
		else
			-- Tắt auto
			running = false
			if characterAddedConnection then
				characterAddedConnection:Disconnect()
				characterAddedConnection = nil
			end
		end
	end
})



local Toggle = EventTab:Toggle({
    Title = "Auto Submit/Collect Honey",
    Desc = "Tự động đưa cây bị Pollinated và Collect Honey",
    Icon = "check",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().AutoSubmitPlant = state
        task.spawn(function()
            while getgenv().AutoSubmitPlant do
                pcall(function()
                    game:GetService("ReplicatedStorage")
                        :WaitForChild("GameEvents")
                        :WaitForChild("HoneyMachineService_RE")
                        :FireServer("MachineInteract")
                end)
                task.wait(10)
            end
        end)
    end
})






local Section = EventTab:Section({ 
    Title = "Auto Buy",
    TextXAlignment = "Center",
    TextSize = 17, -- Default Size
})





-- Danh sách item trong Event Shop
local eventItems = {
    "Flower Seed Pack", "Lavender", "Nectarshade", "Nectarine", "Hive Fruit",
    "Pollen Radar", "Nectar Staff", "Honey Sprinkler", "Bee Egg", "Bee Crate",
    "Honey Comb", "Bee Chair", "Honey Torch", "Honey Walkway"
}

-- Biến toàn cục
getgenv().SelectedEventItems = {}
getgenv().AutoBuyEventItems = false

-- Dropdown chọn item Event Shop
local EventDropdown = EventTab:Dropdown({
    Title = "Chọn vật phẩm muốn mua (Event Shop)",
    Values = eventItems,
    Value = {},
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        getgenv().SelectedEventItems = option or {}
        print("Đã chọn Event Items: " .. game:GetService("HttpService"):JSONEncode(getgenv().SelectedEventItems))
    end
})

-- Toggle bật/tắt mua item đã chọn
local EventToggle = EventTab:Toggle({
    Title = "Auto Buy Event Items",
    Desc = "Tự động mua những vật phẩm đã chọn trong Event Shop",
    Icon = "shopping-cart",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().AutoBuyEventItems = state
        task.spawn(function()
            while getgenv().AutoBuyEventItems do
                for _, itemName in ipairs(getgenv().SelectedEventItems) do
                    pcall(function()
                        game:GetService("ReplicatedStorage")
                            :WaitForChild("GameEvents")
                            :WaitForChild("BuyEventShopStock")
                            :FireServer(itemName)
                    end)
                end
                task.wait(0.5)
            end
        end)
    end
})


----------------------------------------------------------------------------------------------------Misc Tab

local Section = MiscTab:Section({ 
    Title = "Misc",
    TextXAlignment = "Center",
    TextSize = 17, -- Default Size
})


local lp = game.Players.LocalPlayer

-- Seed Shop Toggle
local SeedShopToggle = MiscTab:Toggle({
    Title = "Seed Shop",
    Desc = "Mở Shop Seed",
    Icon = "sprout",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        local ui = lp.PlayerGui:FindFirstChild("Seed_Shop")
        if ui then ui.Enabled = state end
    end
})

-- Gear Shop Toggle
local GearShopToggle = MiscTab:Toggle({
    Title = "Gear Shop",
    Desc = "Mở Shop Gear",
    Icon = "box",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        local ui = lp.PlayerGui:FindFirstChild("Gear_Shop")
        if ui then ui.Enabled = state end
    end
})

-- Honey Shop Toggle
local Toggle = MiscTab:Toggle({
    Title = "Honey Shop",
    Desc = "Mở Shop Honey",
    Icon = "star",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        local ui = lp.PlayerGui:FindFirstChild("HoneyEventShop_UI")
        if ui then ui.Enabled = state end
    end
})

--anti afk


local Toggle = MiscTab:Toggle({
    Title = "Anti AFK",
    Desc = "Ngăn bị kick khi AFK",
    Icon = "clock",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        local lp = game:GetService("Players").LocalPlayer
        local vu = game:GetService("VirtualUser")

        if state then
            lp.__antiAfkConnection = lp.Idled:Connect(function()
                vu:Button2Down(Vector2.zero, workspace.CurrentCamera.CFrame)
                task.wait(1)
                vu:Button2Up(Vector2.zero, workspace.CurrentCamera.CFrame)
            end)
        else
            if lp.__antiAfkConnection then
                lp.__antiAfkConnection:Disconnect()
                lp.__antiAfkConnection = nil
            end
        end
    end
})
