local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Grow A Garden",
    Icon = "Info",
    Author = "Made By Minh",
    Folder = "CapyHub",
    Size = UDim2.fromOffset(520, 300),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 190,
    HasOutline = true,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = false,
    ScrollBarEnabled = false,
    User = {
        Enabled = true,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})
    
Window:EditOpenButton({
	Title = "Capy Hub",
	CornerRadius = UDim.new(0, 10),
	Draggable = true
});

local MainTab = Window:Tab({
    Title = "Main",
    Icon = "house",
    Desc = "Main Section",
    Locked = false,
})

local ShopTab = Window:Tab({
    Title = "Shop",
    Icon = "shop",
    Locked = false,
})

Window:SelectTab(2) -- Number of Tab

local Button = MainTab:Button({
    Title = "Button",
    Desc = "Test Button",
    Locked = false,
    Callback = function()
        print("clicked")
    end
})

--Auto Collect

local Remotes = require(game:GetService("ReplicatedStorage").Modules.Remotes)
local CollectRemote = Remotes.Crops.Collect

local autoCollectRunning = false
local autoCollectThread = nil

-- Hàm thu hoạch cây
local function getHarvestableCrops()
    local result = {}
    local tagged = game:GetService("CollectionService"):GetTagged("CollectPrompt")
    for _, prompt in pairs(tagged) do
        local important = prompt:FindFirstAncestor("Important")
        if important and important:FindFirstChild("Data") and important.Data:FindFirstChild("Owner") then
            if important.Data.Owner.Value == game.Players.LocalPlayer.Name then
                table.insert(result, prompt.Parent.Parent)
            end
        end
    end
    return result
end

-- Toggle UI
local Toggle = MainTab:Toggle({
    Title = "Thu Hoạch Tất Cả",
    Desc = "Tự động thu hoạch cây trồng của bạn",
    Icon = "leaf",
    Type = "Checkbox",
    Default = false,
    Callback = function(state) 
        autoCollectRunning = state
        print("Auto Collect: " .. tostring(state))

        if state then
            autoCollectThread = task.spawn(function()
                while autoCollectRunning do
                    local crops = getHarvestableCrops()
                    for _, crop in ipairs(crops) do
                        pcall(function()
                            CollectRemote.send({crop})
                        end)
                        wait(0.1) -- tránh lag, có thể giảm nếu máy khỏe
                    end
                    wait(0.5)
                end
            end)
        else
            if autoCollectThread then
                task.cancel(autoCollectThread)
                autoCollectThread = nil
            end
        end
    end
})

--Tabs Shop


-- Danh sách hạt giống
local seedList = {
    "Carrot", "Strawberry", "Blueberry", "Orange Tulip", "Tomato",
    "Corn", "Daffodil", "Watermelon", "Pumpkin", "Apple", "Bamboo",
    "Coconut", "Cactus", "Dragon Fruit", "Mango", "Grape", "Mushroom",
    "Pepper", "Cacao", "Beanstalk"
}

-- Biến toàn cục
getgenv().SelectedSeeds = {}
getgenv().AutoBuySeeds = false

-- Dropdown chọn hạt giống
local SeedDropdown = ShopTab:Dropdown({
    Title = "Chọn hạt giống muốn mua",
    Values = seedList,
    Value = {}, -- mặc định không chọn gì
    Multi = true,
    AllowNone = true,
    Callback = function(option)
        getgenv().SelectedSeeds = option or {}
        print("Seeds selected: " .. game:GetService("HttpService"):JSONEncode(getgenv().SelectedSeeds))
    end
})

-- Toggle auto mua
local SeedToggle = ShopTab:Toggle({
    Title = "Auto Buy Selected Seeds",
    Desc = "Mua liên tục các loại hạt giống đã chọn",
    Icon = "bird",
    Type = "Checkbox",
    Default = false,
    Callback = function(state)
        getgenv().AutoBuySeeds = state
        print("Auto Buy Toggle: " .. tostring(state))
        
        task.spawn(function()
            while getgenv().AutoBuySeeds do
                for _, seed in ipairs(getgenv().SelectedSeeds) do
                    pcall(function()
                        game:GetService("ReplicatedStorage").GameEvents.BuySeedStock:FireServer(seed)
                    end)
                end
                task.wait(2)
            end
        end)
    end
})


