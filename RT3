local WindUI = loadstring(game:HttpGet("https://github.com/Footagesus/WindUI/releases/latest/download/main.lua"))()

local Window = WindUI:CreateWindow({
    Title = "Restaurant Tycoon 3",
    Icon = "door-open",
    Author = "Made By Minh",
    Folder = "RT3Minh",
    Size = UDim2.fromOffset(490, 320),
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 190,
    Background = "", -- rbxassetid only
    BackgroundImageTransparency = 0.42,
    HideSearchBar = true,
    ScrollBarEnabled = false,
    User = {
        Enabled = false,
        Anonymous = true,
        Callback = function()
            print("clicked")
        end,
    },
})

Window:EditOpenButton({
    Title = "RT3",
    Icon = "Box",
    CornerRadius = UDim.new(0,10),
    StrokeThickness = 1.75,
    Color = ColorSequence.new( -- gradient
        Color3.fromHex("6FA8DC"), 
        Color3.fromHex("CFE2F3")
    ),
    OnlyMobile = false,
    Enabled = true,
    Draggable = true,
})

-----------------------------------------------------------Tabs--------------------------------------------------------------

local MainTab = Window:Tab({
    Title = "Main",
    Icon = "house",
    Desc = "Main Section",
    Locked = false,
})

Window:SelectTab(1) -- Number of Tab


----------------------------------------------------------Main------------------------------------------------------------------
local ToggleCook = MainTab:Toggle({
	Title = "Auto Cook",
	Desc = "Tự động nấu ăn",
	Icon = "flame",
	Type = "Checkbox",
	Default = false,
	Callback = function(state)
		local players = game:GetService("Players")
		local replicated_storage = game:GetService("ReplicatedStorage")
		local workspace = game:GetService("Workspace")
		local local_player = players.LocalPlayer

		local tycoon = nil
		for _, v in workspace:FindFirstChild("Tycoons"):GetDescendants() do
			if v.Name == "Player" and v.Value == local_player then
				tycoon = v.Parent
				break
			end
		end

		local surface = tycoon and tycoon:FindFirstChild("Items"):FindFirstChild("Surface")
		local delay = 0.25
		local autoCookThread

		if state and surface then
			autoCookThread = task.spawn(function()
				local oven = nil
				for _, v in surface:GetDescendants() do
					if v.Name:find("Oven") then
						oven = v.Parent
						break
					end
				end
				while state do
					if oven then
						local cookEvents = replicated_storage:FindFirstChild("Events")
						if cookEvents then
							local cookModule = cookEvents:FindFirstChild("Cook")
							if cookModule then
								local cookInput = cookModule:FindFirstChild("CookInputRequested")
								if cookInput then
									cookInput:FireServer("Interact", oven, "Oven")
								end
							end
						end
					end
					task.wait(delay)
				end
			end)
		elseif autoCookThread then
			task.cancel(autoCookThread)
		end
	end
})
